#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
"""

import torch
import numpy as np
import pandas as pd
from utils import load_saved_model
from prediction import predict_test_bearing

def predict_with_saved_model(test_data_path, model_dir="saved_models"):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏"""
    
    print("=== –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ ===")
    model, scaler, pca, metadata = load_saved_model(model_dir)
    
    if model is None:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        return
    
    print(f"\n=== –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞: {test_data_path} ===")
    
    try:
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º
        test_data = pd.read_csv(test_data_path, sep=';')
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {test_data.shape[0]} –æ–±—Ä–∞–∑—Ü–æ–≤, {test_data.shape[1]} –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")
        
        # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥—à–∏–ø–Ω–∏–∫–∞
        mean_pred, state, state_value = predict_test_bearing(model, scaler, pca, test_data)
        
        print(f"\n=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê ===")
        print(f"üìä –°—Ä–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {mean_pred:.2f}%")
        print(f"üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")
        print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–Ω–æ—Å–∞: {100 - mean_pred:.2f}%")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        if mean_pred < 25:
            print(f"   ‚Ä¢ ‚ö†Ô∏è  –ü–û–î–®–ò–ü–ù–ò–ö –¢–†–ï–ë–£–ï–¢ –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ô –ó–ê–ú–ï–ù–´!")
            print(f"   ‚Ä¢ –ò–∑–Ω–æ—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {100 - mean_pred:.1f}%")
            print(f"   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ")
        elif mean_pred < 75:
            print(f"   ‚Ä¢ ‚ö° –ü–û–î–®–ò–ü–ù–ò–ö –í –ù–û–†–ú–ê–õ–¨–ù–û–ú –°–û–°–¢–û–Ø–ù–ò–ò")
            print(f"   ‚Ä¢ –ò–∑–Ω–æ—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {100 - mean_pred:.1f}%")
            print(f"   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        else:
            print(f"   ‚Ä¢ ‚úÖ –ü–û–î–®–ò–ü–ù–ò–ö –í –û–¢–õ–ò–ß–ù–û–ú –°–û–°–¢–û–Ø–ù–ò–ò")
            print(f"   ‚Ä¢ –ò–∑–Ω–æ—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {100 - mean_pred:.1f}%")
            print(f"   ‚Ä¢ –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é")
            
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {test_data_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=== –ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥—à–∏–ø–Ω–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ ===\n")
    
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    test_files = [
        "data/test_bearing.csv",
        "data/test_bearing2.csv"
    ]
    
    for test_file in test_files:
        print(f"\n{'='*60}")
        predict_with_saved_model(test_file)
        print(f"{'='*60}")
    
    print(f"\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    main()
